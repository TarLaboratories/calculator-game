/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.4.1/userguide/tutorial_java_projects.html
 */

// Apply the java plugin to add support for Java
apply plugin: 'java'

// Apply the application plugin to add support for building an application
apply plugin: 'application'

// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    mavenCentral()
}

dependencies {
    // This dependency is found on compile classpath of this component and consumers.
    implementation 'org.python:jython-slim:2.7.4'
    implementation 'org.json:json:20231013'
    implementation 'org.apache.logging.log4j:log4j-api:2.24.3'
    compileOnly 'org.jetbrains:annotations:26.0.2'
    runtimeOnly 'org.apache.logging.log4j:log4j-core:2.24.3'
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(23)
    }
}

application {
    mainClass = 'Main'
}

jar {
    destinationDirectory.set(layout.buildDirectory.dir("jars"))
    manifest {
        attributes(
                'Main-Class': 'Main',
                'Multi-Release': true
        )
    }
    duplicatesStrategy = 'EXCLUDE'
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    } {
        exclude 'META-INF/*.SF'
        exclude 'META-INF/*.DSA'
        exclude 'META-INF/*.RSA'
    }
}

CopySpec configSpec = copySpec {
    from 'src/main/config'
    include '*'
}

tasks.register('copyConfigs', Copy) {
    into layout.buildDirectory.dir('classes/java/main')
    with configSpec
}

tasks.compileJava.dependsOn.add 'copyConfigs'